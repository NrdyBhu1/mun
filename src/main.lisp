;; (ql:quickload :sdl2)
;; (ql:quickload :sdl2-image)
(in-package #:mun)
(require :sdl2)
(require :sdl2-image)
(require :sdl2-mixer)

(defun run ()
  "Main entry point"
  (init)
  (sdl2:with-window (win :title "mun" :w 800 :h 500 :flags '(:shown))
    (sdl2:with-renderer (renderer win)
      (defparameter *player* (make-instance 'player :speed 1))
      (defparameter *music* (sdl2-mixer:load-music #P"./assets/pixel-perfect.mp3"))
      (defparameter *frames* (list (sdl2:make-rect 0 0 64 64)
                                   (sdl2:make-rect 64 0 64 64)
                                   (sdl2:make-rect 128 0 64 64)
                                   (sdl2:make-rect 192 0 64 64)
                                   (sdl2:make-rect 0 64 64 64)
                                   (sdl2:make-rect 64 64 64 64)))
      (player-start *player* renderer)
      (sdl2-mixer:play-music *music* -1)
      (sdl2:with-event-loop (:method :poll)
        (:keydown
         (:keysym keysym)
         (case (sdl2:scancode keysym)
           (:scancode-a (player-move-left *player*))
           (:scancode-d (player-move-right *player*))
           (:scancode-w (player-move-up *player*))
           (:scancode-s (player-move-down *player*))))
        (:keyup
         (:keysym keysym)
         (case (sdl2:scancode keysym)
           (:scancode-escape (sdl2:push-event :quit))
           (:scancode-a (player-stop-horizontal *player*))
           (:scancode-d (player-stop-horizontal *player*))
           (:scancode-w (player-stop-vertical *player*))
           (:scancode-s (player-stop-vertical *player*))))
        (:idle
         ()
         ;; update player position
         (player-update-motion *player*)

         ;; rendering stuff
         (sdl2:render-clear renderer)
         (player-render *player* renderer *frames*)
         (sdl2:set-render-draw-color renderer 50 50 50 255)
         (sdl2:render-present renderer)
         ;; delay
         (sdl2:delay 4))
        (:quit ((player-stop *player*)
                (sdl2-mixer:halt-music)
                (sdl2-mixer:free-music *music*)
                (deinit)
                (exit)) t)))))
